const cardutil = (() => {
  const THROTTLER = (_func, limit) => {
    let inThrottle;
    return function () {
      const context = this;
      if (!inThrottle) {
        _func.apply(context, arguments);
        inThrottle = !0;
        setTimeout(() => (inThrottle = !1), limit);
      }
    };
  };
  const sleep = (ms) => {
    return new Promise((resolve) => setTimeout(resolve, ms));
  };
  const init = () => {
    const blur = document.querySelector("#blur");
    blur.classList.add("hide");
    const userAgent = navigator.userAgent.toLowerCase();
    if (userAgent.includes("kakao") || userAgent.includes("kakaotalk")) {
      document.querySelector("html").style.scrollSnapType = "initial";
      const measureHeight = document.querySelector("#blur").clientHeight;
      const vh = measureHeight * 0.0115;
      document.documentElement.style.setProperty("--vh", `${vh}px`);
    } else {
      const measureHeight = document.querySelector("#blur").clientHeight;
      const vh = measureHeight * 0.01;
      document.documentElement.style.setProperty("--vh", `${vh}px`);
    }
    const endPage = document.querySelector("#sixth .flower-info");
    const fixedPhoto = document.querySelector("#fixed-photo");
    const photoWrap = document.querySelector("#first > div.title-wrap > div");
    const photoleft = document.querySelector("#first .photo-wrap .photo-left");
    const photoRight = document.querySelector("#first .photo-wrap .photo-right");
    const elementIsVisible = (el) => {
      var rect = el.getBoundingClientRect();
      return (
        rect.top >= 0 && rect.left >= 0 && rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && rect.right <= (window.innerWidth || document.documentElement.clientWidth)
      );
    };
    const isZoom = () => {
      if (window.innerWidth < window.screen.width) {
        // blur.classList.remove("hide");
      } else {
        blur.classList.add("hide");
      }
    };
    const scrollEvent = async () => {
      fixedPhoto.toggleAttribute("open", !elementIsVisible(endPage));
      let isVisible = elementIsVisible(photoWrap);
      photoleft.toggleAttribute("open", isVisible);
      await sleep(1000);
      photoRight.toggleAttribute("open", isVisible);
      isZoom();
    };
    document.addEventListener("scroll", THROTTLER(scrollEvent, 100));
    scrollEvent();
    const root = document.documentElement;
    if (window.innerWidth < 1024) {
      root.style.setProperty("--mobile-width", root.clientWidth + "px");
      root.style.setProperty("--mobile-height", root.clientHeight + "px");
    }
  };
  const countdown = () => {
    const due = document.getElementById("due-date");
    let countDownDate = new Date("Aug 4, 2024 16:00:00").getTime();
    let now = new Date().getTime();
    let distance = countDownDate - now;
    let days = Math.floor(distance / (1000 * 60 * 60 * 24));
    let hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
    due.innerHTML = days + " 일 남았습니다.";
    if (days <= 0 && hours <= 23 && hours >= 12) {
      due.innerHTML = hours + " 시간 남았습니다.";
    } else if (days <= 0 && hours <= 23) {
      due.innerHTML = "<span class='today'>오늘</span> 입니다";
    }
  };
  const swiper = () => {
    new Swiper(".mySwiper", { rewind: !0, pagination: { el: ".swiper-pagination", type: "fraction" }, navigation: { nextEl: ".swiper-button-next", prevEl: ".swiper-button-prev" } });
  };
  const copy = () => {
    const clipboard = new ClipboardJS(".copy");
    clipboard.on("success", () => {
      alert("복사되었습니다.");
    });
  };
  const alert = (msg) => {
    const snackbarWrap = document.querySelector("#snackbar-wrap");
    const snackbar = document.querySelector("#snackbar");
    snackbar.innerHTML = msg;
    snackbar.classList.add("show");
    snackbarWrap.classList.add("show");
    setTimeout(function () {
      snackbar.classList.remove("show");
      snackbarWrap.classList.remove("show");
    }, 3000);
  };
  return { init: init(), countdown: countdown(), swiper: swiper(), copy: copy() };
})();
